### Error messages for ConsistencyChecker
assignment.type.implicitflow=assignment to consistency level <%s> in context <%s>.\nin: %s
invocation.receiver.implicitflow=receiver has consistency level <%s> in context <%s>.\nin: %s
invocation.argument.implicitflow=argument has consistency level <%s> in context <%s>.\nin: %s
invocation.operation.implicitflow=mixed operation has operation level <%s> in context <%s>.\nin: %s

consistency.inferred=consistency level of <%s> unknown and has been inferred to @Inconsistent.\nin: %s

# TODO: rename keys
invocation.ref.transaction=access to replicated data outside of transaction context.\nin: <%s>
invocation.replicate.transaction=replication operation outside of transaction context.\nin: <%s>
invocation.method.transaction="invocation of transactional method outside of transaction context.\nin: <%s>"
transaction.override="override of non-transactional method with transactional method.\noverridden from: <%s>"

replicate.class="replication of class with given level not allowed.\nin: <%s>\n reason: <%s>"
consistency.type.use.incompatible=use of consistency <%s> on type <%s> not compatible\n reasons:\n <%s>
ref.member.access=access of private or protected member through a replicated reference

mixed.field.static.incompatible=static field is marked something other than @Inconsistent.
mixed.field.public.incompatible=public field is marked something other than the default level <%s>.
mixed.field.incompatible=incompatible usage of explicitly annotated or public field <%s> in mixed class operation <%s>.
mixed.inheritance.field.overwrite=field <%s> <%s> of base class is used in weaker operation with level <%s> in derived class <%s>.
mixed.inheritance.operation.incompatible=operation level <%s> is incompatible with operation level <%s> of overridden method in class <%s>.
mixed.operation.ambiguous=method defines more than one operation level.
mixed.operation.default.invalid=default operation for Mixed qualifier is not a valid operation level.

immutability.assignment.type=assignment to immutable reference.
immutability.invocation.receiver=invocation of non-side-effect free method on immutable reference.
immutability.return.type=class with consistency type cannot have mutable return types.

compiler.ref=non-checkable compiled ref-call found. This may indicate a problem with the execution order of the compiler plugin.